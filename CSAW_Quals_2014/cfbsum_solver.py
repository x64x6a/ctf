import os

'''
import array

def encrypt(pt, key):
	rSum=0
	pVal=0
	ret=[]
	for plainByte,keyByte in zip(pt,key):
		cByte= plainByte^keyByte^pVal^rSum
		pVal=cByte
		rSum=(rSum+pVal)%256
		ret.append(cByte)
	return ret
def decrypt(pt, key):
	rSum=0
	pVal=0
	cByte=0
	ret=[]
	for cByte,keyByte in zip(pt,key):
		plainByte = cByte ^keyByte^pVal^rSum
		pVal = cByte
		rSum = (rSum+pVal)%256
		ret.append(plainByte)
	return ret

key=[238, 248, 225, 236, 213, 99, 9, 213, 11, 65, 87, 31, 223, 237, 37, 166, 120, 96, 208, 119, 202, 239, 200, 212, 176, 129, 226, 20, 209, 181, 143, 2, 169, 19, 206, 31, 49, 22, 103, 161, 157, 128, 30, 224, 97, 117, 100, 70, 175, 170, 212, 131, 167, 239, 16, 62, 241, 100, 89, 215, 190, 252, 61, 204, 237, 127, 169, 155, 250, 191, 13, 89, 59, 132, 132, 184, 124, 122, 113, 189, 167, 116, 148, 83, 191, 236, 71, 142, 159, 183, 118, 206, 116, 100, 56, 46, 65, 19, 176, 24, 214, 122, 58, 157]
c1=[237, 234, 203, 161, 60, 96, 113, 30, 103, 109, 39, 118, 183, 113, 252, 79, 255, 111, 234, 46, 17, 143, 36, 104, 140, 103, 99, 103, 215, 187, 212, 238, 136, 129, 159, 182, 140, 250, 182, 251, 173, 132, 50, 226, 115, 75, 80, 224, 174, 32, 113, 227, 52, 168, 113, 187, 132, 51, 180, 253, 118, 244, 221, 170, 186, 80, 82, 204, 218, 5, 50, 70, 166, 200, 29, 17, 175, 78, 57, 99, 8, 93, 153, 183, 161, 106, 203, 176, 64, 181, 43, 155, 34, 139, 68, 226, 219, 255, 35, 155, 155, 13, 176, 249, 95, 236, 85, 41, 241, 95, 46, 215, 227, 210, 91, 106, 142, 222, 240, 236, 184, 106, 46, 9, 240, 119, 64, 121, 69, 125, 185, 243, 214, 70, 30, 206, 97, 237, 153, 146, 72, 10, 14, 241, 47, 153, 6, 225, 68, 228, 181, 205, 36, 109, 209, 144, 220, 109, 34, 38, 98, 90, 100, 158, 251, 34, 64, 232, 21, 179, 232, 178, 180, 24, 166, 155, 185, 134, 52, 193, 66, 6, 160, 216, 185, 206, 210, 224, 174, 9, 32, 130, 25, 69, 42, 225, 83, 51, 244, 232, 69, 33, 198, 22, 235, 133, 98, 241, 140, 228, 191, 134, 128, 60, 144, 90, 67, 159, 53, 232, 169, 212, 44, 198, 124, 19, 236, 220, 192, 42, 207, 204]
c2=[238, 245, 224, 235, 207, 161, 113, 207, 130, 175, 122, 13, 5, 81, 160, 18, 241, 108, 28, 229, 101, 183, 169, 119, 55, 250, 183, 77, 210, 129, 181, 90, 113, 37, 204, 234, 61, 104, 196, 53, 185, 50, 117, 45, 129, 211, 123, 168, 82, 201, 103, 23, 255, 220, 39, 108, 8, 109, 164, 216, 4, 64, 212, 31, 7, 197, 146, 50, 69, 165, 86, 222, 255, 29, 234, 232, 56, 184, 1, 88, 107, 216, 240, 9, 91, 70, 34, 159, 196, 67, 45, 225, 86, 138, 27, 178, 179, 4, 29, 240, 163, 110, 82, 9, 146, 56, 51, 178, 49, 138, 99, 51, 87, 153, 74, 136, 218, 10, 101, 125, 228, 55, 63, 53, 197, 23, 198, 151, 164, 104, 39, 144, 205, 252, 185, 213, 234, 180, 214, 18, 85, 113, 195, 22, 227, 205, 90, 189, 9, 226, 224, 101, 68, 98, 215, 61, 249, 155, 212, 9, 141, 127, 62, 67, 205, 23, 119, 255, 1, 130, 53, 170, 148, 76, 109, 127, 79, 245, 25, 155, 58, 197, 144, 62, 218, 163, 110, 191, 45, 93, 9, 190, 63, 196, 76, 197, 172, 86, 138, 157, 111, 92, 251, 108, 9, 198, 122, 197, 66, 129, 17, 185, 101, 60, 190, 160, 167, 215, 211, 251, 87, 96, 98, 118, 69, 239, 58, 254, 110, 83, 157, 89, 107, 3, 98, 166, 39, 32, 25, 61, 4, 77, 163, 110, 163, 250, 196, 218, 61, 58, 115, 121, 88, 234, 223, 4, 104, 212, 32, 33, 111, 94, 47, 222, 94, 140, 101, 143, 130, 143, 205, 10, 241, 254, 103, 181, 222]
c3=[255, 244, 230, 234, 247, 59, 0, 219, 24, 56, 7, 75, 102, 168, 180, 58, 189, 30, 18, 33, 185, 190, 203, 234, 180, 223, 5, 19, 47, 21, 238, 102, 250, 200, 124, 199, 111, 189, 88, 138, 136, 103, 227, 255, 82, 125, 28, 228, 189, 225, 44, 139, 94, 245, 177, 213, 39, 173, 123, 77, 195, 131, 208, 124, 236, 172, 71, 250, 246, 165, 222, 101, 235, 135, 120, 205, 41, 127, 111, 170, 237, 178, 215, 115, 251, 3, 96, 240, 34, 159, 117, 54, 8, 95, 5, 37, 209, 105, 154, 194, 68, 245, 116, 80, 149, 199, 36, 79, 170, 168, 5, 237, 50, 168, 121, 240, 94, 18, 77, 244, 250, 131, 96, 42, 195, 101, 65, 169, 157, 100, 92, 163, 25, 219, 44, 7, 29, 122, 112, 120, 91, 89, 83, 100, 193, 90, 211, 18, 213, 136, 208, 5, 17, 175, 73, 11, 141, 71, 201, 221, 16, 2, 121, 146, 250, 41, 124, 87, 108, 186, 253, 78, 132, 136, 120, 190, 222, 6, 159, 120, 234, 25, 56, 68, 247, 149, 8, 126, 220, 225, 250, 74, 204, 147, 167, 246, 245, 76, 140, 40, 90, 5, 10, 35]
c4=[241, 242, 245, 171, 239, 178, 27, 10, 17, 130, 75, 72, 125, 135, 123, 37, 204, 158, 172, 164, 152, 138, 184, 207, 67, 197, 92, 217, 2, 76, 58, 94, 178, 37, 77, 104, 29, 147, 186, 213, 4, 0, 68, 50, 141, 188, 32, 100, 75, 181, 245, 152, 129, 206, 8, 26, 150, 156, 58, 64, 250, 211, 26, 227, 148, 215, 54, 211, 208, 30]
c5=[237, 245, 225, 246, 128, 196, 164, 99, 116, 146, 142, 52, 178, 142, 22, 142, 145, 83, 131, 236, 95, 11, 162, 118, 70, 185, 215, 155, 24, 231, 125, 80, 181, 66, 226, 234, 116, 3, 3, 8, 238, 126, 101, 113, 79, 194, 47, 224, 78, 254, 176, 15, 66, 2, 249, 154, 233, 235, 159, 29, 47, 5, 186, 251, 28, 77, 18, 3, 158, 210, 102, 143, 10, 92, 139, 126, 160, 192, 247, 63, 246, 29, 15, 250, 168, 45, 219, 79, 53, 255, 221, 196, 174, 53, 41, 216, 229, 0, 76, 218, 117, 187, 182, 91, 162, 13, 213, 152, 39, 67, 169, 175, 140, 0, 123, 64, 127, 175, 89, 213, 103, 71, 105, 147, 99, 88, 239, 133, 137, 63, 188, 203, 11, 124, 120, 80, 224, 26, 46, 253, 192, 122, 52, 254, 102, 159, 121, 121, 223, 18, 9, 201, 145, 174, 10, 9, 142, 86, 176, 66, 6, 214, 79, 137, 249, 120, 78, 90, 157, 217, 250, 43, 95, 19, 208, 62, 177, 50, 110, 198, 133, 89, 212, 155, 216, 181, 153, 226, 252, 85, 61, 126, 91, 241, 240, 28, 202, 225, 199, 255, 203, 207, 182, 227, 144, 246, 247, 69, 112, 2, 245, 69, 237, 194, 238, 241, 15, 237, 140, 126, 186, 192, 191, 188, 72, 165, 102, 131, 194, 229, 11, 200, 67, 228, 91, 241, 176, 0, 245, 108, 198, 47, 22, 214, 221, 2, 160, 10, 42, 204, 162, 215, 64, 76, 120, 59, 201, 21, 74, 155, 214, 117, 115, 106, 36, 40, 158, 107, 22, 194, 226, 162, 169, 160, 194, 26, 220, 203, 245, 169, 56, 252, 140, 37, 161, 202, 224, 46, 66, 80, 38, 196, 69, 127, 35, 167, 77, 196, 82, 57, 101, 183, 196, 180, 129, 52, 0, 56, 47, 114, 11, 152, 226, 231, 249, 235, 223, 225, 232, 169, 56, 147, 41, 5, 57, 55, 107, 135, 234, 254, 248, 27, 34, 192, 21, 106, 11, 224, 156, 31, 0, 208, 161, 185, 254, 152, 128, 139, 116, 144, 37, 162, 126, 124, 219, 49, 59, 4, 118, 101, 174, 224, 122, 72, 252, 104, 234, 47, 140, 210, 22, 26, 154, 104, 12, 43, 238, 44, 105, 28, 147, 151, 105, 149, 60, 225, 147, 222, 162, 108, 61, 206, 101, 134, 4, 17, 248, 46, 125, 184, 83, 13, 171, 190, 110, 49, 205, 185, 126, 177, 181, 49, 45, 31, 226, 79, 37, 48, 190, 115, 136, 208, 75, 34, 68, 12, 160, 242, 206, 218, 148, 157, 32, 54, 25, 158, 135, 61, 247, 219, 178, 122, 18, 19, 56, 152, 181, 251, 162, 94, 228, 232, 88, 247, 196, 204, 139, 204, 18, 186, 159, 74, 193, 153, 87, 212, 75, 60, 220, 245, 119, 124, 191, 195, 145, 209, 107, 114, 230, 243, 235, 96, 12, 237, 78, 227, 8, 243, 251, 237, 163, 67, 188, 233, 184, 123, 25, 96, 168, 170, 231, 75, 6, 74, 214, 58, 123, 166, 134, 220, 61, 75, 161, 81, 40, 209, 37, 84, 108, 15, 203, 245, 206, 233, 177, 97, 93, 110, 157, 5, 233, 81, 35, 203, 75, 22, 49]


ciphers = [key,c1,c2,c3,c4,c5]
new_ciphers = []

# dumb down the encryption to a simple XoR  (plaintext^key)
for c in ciphers:
	new_c = [c[0]]
	for i,e in enumerate(c[1:]):
		new_c += [e ^ c[i] ^ (sum(c[:i+1])%256)]
	new_ciphers.append(new_c)

ciphers = []
with open("xors.txt","w") as f:
	for c,i in enumerate(new_ciphers):
		#i = `(chr(f) for f in i)`
		f.write(str(i)+'\n')
		ciphers.append(i)
'''

def xor(s1,s2):
	return ''.join(chr(ord(i)^ord(j)) for i,j in zip(s1,s2))

#Dumb Cipher texts:
key=[238, 248, 255, 202, 138, 62, 129, 40, 23, 158, 3, 36, 75, 88, 159, 255, 252, 130, 74, 109, 252, 46, 221, 222, 242, 119, 164, 95, 120, 234, 121, 95, 127, 199, 77, 143, 83, 137, 181, 237, 240, 116, 119, 249, 102, 92, 172, 3, 142, 19, 190, 195, 51, 246, 82, 147, 52, 121, 109, 39, 233, 124, 251, 134, 98, 162, 121, 106, 146, 168, 30, 237, 112, 242, 209, 105, 201, 143, 8, 184, 43, 11, 172, 39, 223, 161, 117, 236, 162, 122, 200, 199, 247, 209, 121, 75, 228, 158, 124, 39, 105, 209, 183, 150]
c1=[237, 234, 246, 200, 222, 35, 206, 63, 23, 223, 8, 56, 30, 80, 138, 176, 226, 193, 69, 110, 231, 119, 211, 208, 224, 123, 243, 94, 113, 244, 60, 29, 115, 148, 0, 148, 73, 137, 181, 226, 252, 126, 109, 221, 126, 90, 182, 77, 147, 5, 250, 142, 40, 175, 2, 134, 56, 60, 57, 59, 228, 103, 240, 193, 112, 240, 104, 34, 158, 189, 80, 237, 63, 235, 152, 102, 197, 203, 15, 235, 127, 73, 189, 60, 223, 161, 117, 228, 191, 122, 218, 223, 179, 133, 120, 93, 228, 156, 107, 98, 117, 134, 160, 132, 96, 150, 168, 26, 87, 46, 174, 244, 208, 246, 16, 197, 186, 188, 228, 166, 242, 140, 140, 209, 6, 104, 81, 159, 35, 92, 37, 208, 168, 243, 241, 23, 58, 122, 151, 119, 212, 20, 100, 145, 129, 56, 184, 202, 171, 242, 103, 147, 81, 149, 245, 91, 230, 55, 188, 17, 127, 165, 201, 161, 156, 45, 116, 254, 195, 245, 93, 180, 166, 248, 210, 47, 143, 89, 94, 213, 98, 103, 143, 177, 192, 45, 52, 200, 148, 47, 184, 19, 168, 16, 254, 112, 46, 143, 229, 10, 83, 39, 131, 250, 189, 69, 87, 129, 126, 231, 40, 11, 190, 132, 216, 206, 71, 125, 234, 168, 28, 123, 34, 236, 118, 39, 164, 119, 63, 9, 232, 223]
c2=[238, 245, 246, 200, 138, 19, 206, 49, 19, 205, 90, 126, 30, 79, 157, 190, 253, 146, 11, 110, 252, 51, 134, 159, 248, 34, 164, 90, 114, 236, 116, 26, 100, 148, 12, 151, 76, 141, 236, 245, 181, 121, 99, 193, 106, 21, 178, 70, 199, 20, 246, 207, 62, 246, 74, 147, 32, 41, 112, 33, 233, 125, 237, 134, 116, 177, 111, 106, 139, 161, 21, 180, 59, 251, 193, 34, 216, 192, 65, 160, 98, 15, 188, 125, 223, 245, 74, 237, 180, 52, 152, 239, 179, 134, 117, 86, 176, 211, 113, 104, 38, 213, 186, 131, 122, 217, 160, 95, 19, 122, 162, 254, 133, 246, 2, 217, 241, 173, 232, 244, 240, 158, 140, 201, 8, 111, 5, 203, 2, 25, 114, 211, 169, 240, 248, 26, 116, 107, 139, 123, 150, 2, 37, 143, 133, 125, 183, 157, 131, 171, 32, 135, 70, 141, 184, 14, 229, 120, 250, 84, 22, 237, 223, 161, 145, 54, 99, 242, 135, 249, 75, 174, 229, 183, 154, 58, 151, 76, 7, 134, 62, 38, 203, 128, 136, 63, 36, 134, 132, 51, 244, 30, 230, 93, 226, 63, 18, 221, 161, 16, 86, 32, 200, 253, 179, 16, 25, 160, 99, 229, 55, 16, 173, 143, 144, 206, 119, 103, 234, 233, 16, 36, 113, 193, 120, 58, 170, 125, 39, 24, 182, 209, 92, 177, 189, 250, 101, 12, 18, 96, 184, 204, 60, 184, 46, 223, 190, 90, 249, 92, 220, 2, 160, 107, 246, 121, 202, 178, 22, 3, 109, 163, 129, 238, 125, 137, 14, 166, 214, 80, 174, 126, 56, 187, 43, 203, 165]
c3=[255, 244, 225, 213, 222, 118, 206, 46, 19, 200, 31, 107, 95, 22, 156, 186, 233, 136, 69, 104, 228, 50, 134, 159, 246, 55, 225, 86, 111, 184, 108, 13, 119, 215, 25, 146, 88, 141, 249, 166, 252, 105, 105, 204, 98, 14, 255, 66, 199, 7, 241, 207, 38, 250, 2, 147, 62, 121, 118, 45, 230, 107, 253, 210, 106, 166, 121, 100, 223, 154, 21, 247, 63, 240, 220, 46, 140, 199, 0, 186, 110, 73, 173, 59, 154, 245, 115, 224, 178, 63, 203, 213, 242, 131, 105, 24, 169, 150, 100, 105, 117, 134, 173, 132, 53, 215, 175, 27, 90, 107, 188, 254, 220, 175, 12, 223, 232, 232, 233, 186, 249, 136, 151, 158, 23, 103, 2, 143, 36, 84, 41, 146, 170, 235, 243, 27, 45, 51, 196, 54, 149, 19, 96, 138, 132, 121, 181, 206, 230, 171, 38, 155, 71, 218, 245, 30, 225, 62, 181, 16, 44, 227, 136, 135, 150, 43, 116, 182, 207, 182, 93, 164, 175, 229, 129, 47, 199, 93, 18, 205, 48, 127, 132, 161, 146, 122, 48, 195, 145, 50, 235, 90, 178, 95, 167, 107, 51, 156, 177, 89, 87, 32, 139, 167]
c4=[241, 242, 228, 134, 199, 47, 141, 46, 82, 201, 21, 36, 90, 22, 143, 176, 250, 141, 79, 33, 241, 119, 221, 208, 250, 63, 231, 95, 104, 251, 119, 95, 117, 220, 24, 152, 80, 204, 252, 224, 181, 108, 44, 218, 97, 90, 187, 3, 132, 8, 235, 205, 33, 246, 65, 157, 37, 53, 125, 111, 239, 102, 235, 197, 104, 240, 107, 37, 144, 173]
c5=[237, 245, 246, 212, 207, 125, 157, 102, 19, 158, 22, 34, 74, 66, 148, 186, 175, 131, 68, 120, 176, 54, 196, 219, 181, 52, 234, 23, 117, 241, 111, 95, 39, 128, 25, 147, 27, 142, 252, 244, 225, 101, 104, 204, 119, 21, 183, 70, 199, 7, 251, 218, 57, 246, 67, 210, 56, 54, 107, 60, 233, 32, 176, 136, 35, 177, 114, 46, 223, 172, 6, 241, 34, 231, 218, 109, 200, 214, 65, 165, 101, 73, 173, 59, 154, 245, 107, 236, 189, 54, 217, 193, 246, 209, 99, 89, 189, 128, 41, 39, 36, 206, 182, 156, 53, 193, 163, 29, 87, 107, 184, 253, 137, 186, 77, 138, 206, 160, 233, 244, 255, 148, 213, 158, 7, 97, 5, 203, 42, 25, 109, 221, 181, 247, 248, 92, 116, 94, 138, 63, 212, 19, 109, 157, 205, 66, 188, 211, 234, 230, 38, 134, 87, 159, 234, 91, 230, 55, 163, 7, 115, 237, 138, 164, 155, 101, 106, 190, 195, 229, 89, 165, 235, 178, 210, 15, 144, 83, 94, 216, 117, 103, 153, 167, 192, 54, 60, 210, 149, 46, 180, 90, 178, 88, 226, 63, 57, 146, 188, 89, 84, 47, 131, 229, 224, 69, 24, 162, 96, 183, 48, 12, 169, 193, 156, 129, 113, 124, 234, 229, 81, 53, 112, 205, 126, 63, 180, 56, 33, 5, 233, 209, 81, 186, 190, 246, 12, 77, 8, 107, 244, 205, 106, 169, 52, 195, 188, 20, 232, 20, 208, 21, 160, 123, 247, 120, 132, 227, 11, 79, 116, 172, 130, 238, 47, 137, 27, 190, 203, 24, 174, 48, 25, 178, 57, 197, 241, 4, 224, 143, 237, 112, 192, 149, 229, 105, 230, 98, 182, 14, 26, 112, 215, 161, 70, 185, 14, 184, 99, 44, 220, 55, 239, 16, 33, 32, 253, 241, 22, 109, 219, 62, 63, 34, 16, 21, 198, 239, 187, 219, 210, 208, 180, 27, 0, 123, 240, 251, 243, 156, 128, 157, 160, 89, 174, 239, 155, 238, 153, 2, 191, 112, 1, 9, 141, 174, 120, 235, 148, 59, 218, 19, 234, 182, 151, 225, 54, 72, 9, 226, 157, 74, 126, 108, 18, 54, 136, 49, 128, 241, 69, 155, 49, 185, 215, 152, 47, 26, 65, 24, 6, 24, 77, 224, 24, 48, 188, 44, 67, 47, 28, 121, 243, 94, 193, 82, 177, 134, 45, 62, 88, 88, 181, 171, 172, 181, 231, 156, 102, 208, 212, 1, 170, 209, 255, 73, 89, 77, 6, 139, 66, 25, 138, 53, 24, 138, 98, 60, 92, 58, 70, 149, 132, 79, 160, 47, 95, 119, 192, 45, 181, 70, 96, 27, 6, 197, 208, 252, 244, 179, 23, 157, 201, 126, 251, 132, 31, 164, 113, 105, 94, 207, 239, 125, 112, 150, 118, 67, 144, 101, 195, 179, 247, 143, 228, 7, 162, 154, 97, 206, 214, 50, 117, 196, 177, 205, 168, 176, 54, 47, 104, 41, 243, 157, 224, 170, 134, 132, 149, 7, 226, 58, 172, 171, 173, 235, 0, 97, 66, 178, 37, 119, 166, 29, 71, 159, 195, 45, 136, 127, 239, 200, 208, 158, 250, 131, 136, 34, 140, 132, 205, 178, 41, 150, 201, 201, 141]

ciphers = [key,c1,c2,c3,c4,c5]

c = []
for ci in ciphers:
	c.append(''.join(chr(i) for i in ci))
ciphers = c


# Manually guess plaintext, one at a time, beginning at position zero
while 1:
	#word = 'The ' # first word I used
	
	# input guessed plaintext
	word = raw_input("\nGimme key> ")
	print
	os.system('reset')
	
	keys = []
	# xor guessed plaintext with all ciphertexts to get possible keys
	for c in ciphers:
		keys += [xor(word,c[:len(word)])]
	#print keys
	
	out = ''
	# xor all ciphertexts with all possible keys
	for key in keys:
		out += 'Key: ' + `str(key)` + '\n'
		key = key*500  # just make the key continuously repeat, incase the key was repeated
		for c in ciphers:
			pt = `xor(key,c)`
			out += '---\n' + pt + '\n'
		out += '='*50 + '\n'

	print out

#'''

'''

Gimme key> First, have a definite, clear practical ideal; a goal, an objective. Second, have the necessary means to achieve your ends; wisdom, money, materials, and methods. Third, adjust all your means to that end. 
...
...
...
==================================================
Key: '\xb9\x9d\x93\xa6\xaaZ\xeeFr\xbezK>6\xf8\xdf\x8f\xe1+\x01\x90W\xaa\xbf\x95[\x847\x1d\x98\x1c\x7f\x16\xb4m\xfb;\xec\x95\x86\x95\r\x0c\xad\x0e5\xdf#\xe7`\x9e\xaeJ\xd6"\xf2PY\x19O\x8c\x0e\x9e\xa6\x03\xd0\x1cJ\xff\xc9p\x94P\x9e\xb8\x02\xac\xafa\xcc\x0bi\xd9S\xff\xd5\x1d\x85\xd1Z\xb8\xa6\x93\xf1\x108\xc4\xf3\x05\x07\x06\xa6\xd9\xeb\x15\xb6\xccs3\x0e\xca\x9b\xfc\xd6c\xaa\x9a\xc8\x8c\xd4\x9d\xfb\xac\xbe`\x0eq\xebK9\x05\xb2\xc7\x84\x9d~T\x1f\xe4[\xf4g\x05\xf8\xed\x18\xd9\xbd\xca\x8bG\xf5#\xfa\x98{\x95V\xdat_\xcd\xa8\xd3\xfeB\x06\xd2\xe3\x96<\xc0\xc5\x90\xf2[\xe7<~\xa1\x10\x06\xeb\xd4\xe0Z]\xa6\xf0\\\x98z\xc60\x87\x1f[\xfd\xc5y2N\xef\x89'
---
'Well done young scallywag, here is the key{This is my pad there are many like it but this pad is my own}'
---
"Twenty years from now you will be more disappointed by the things that you didn't do than by the ones you did do, so throw off the bowlines, sail away from safe harbor, catch the trade winds in your sails\x04\xd8\xc4'\xd4\xbd\xc6M\xcc:\xa2\x85yK\x12w\x93\x9a\t\xed\xe6p\x0e\xc8\xaaRl\xe8"
---
"When I was 5 years old, my mother always told me that happiness was the key to life.  When I went to school, they asked me what I wanted to be when I grew up.  I wrote down 'happy'.  They told me I didn't\n\x8d\x8a\x06\xc9\xbf\xd9V\xdf1\xea\x85IQ\x126\x9f\xc5Z\xc0\xe8m\x00\xc2\xb2C2\xe6A)\xa1\x85s\xb8\x7f\x9b\x83 \xa9>\xbb\xd2\xb2\xf7\xf7i\x03!G\x0bh\xd7\x80d4\xf1=\xfa\x98\xa1\xf1\x87\x90\x00\xd5\x80\xb24\xc7r[_\xf5"
---
'First, have a definite, clear practical ideal; a goal, an objective. Second, have the necessary means to achieve your ends; wisdom, money, materials, and methods. Third, adjust all your means to that end.'
---
'How much wood would a woodchuck chuck if a wood chuck could chuck wood'
---
'There\'s a little boy and on his 14th birthday he gets a horse... and everybody in the village says, "how wonderful. The boy got a horse" And the Zen master says, "we\'ll see." Two years later, the boy fallY\xd8\x8b\x04\xca\xed\xdeJ\xdb\x7f\xe6\xcaOJ\x12:\xde\xd4[\xcc\xeeh\x1e\x87\xb4^m\xe6L"\xa2\x89\x1a\xf9e\x90\xcf!\xff/\xa1\xce\xb0\xb9\xe6!\x0f6G\x1bi\xd6\xce5)\xbd$\xf5\x9b\xa1\xa3\x87\x85\x18\xc8\xc8\xb2z\xe6{IQ\xa1\x9aX\x8dA\xdf\xa1Y\xee\x00?1I\xdb\x07\xf5\x06\xfb\xfe\x1f\x9dIs\x14\x18\xc4\xea\x17\'\x86$\x1a\x03\xdb\x17M\x0c,\xda\x8e:9\xd8qH\x188\xcf\x9d\x80\\E\x93\x92\xf1v\xeb`\xab]\\j\x04|\xebo\xe5Ry\xc9}\x13y#\x03\xae =\xd0\x14\x15\xb2\x91\x99\x08\x1c\xa4\x18M\xfb \xe2~\xb3CI\xd2/\xebX\xea\x8a\xb3C\xe1$3A\x086W\xf8\xa3uA\xdf\x03\x02Y(w\xb6\xaa!\x03\xa5p\xd2\x9e\xfb\x08\x15\xdfMG\xa7\x00\x8b\x11\x0f+\xf3|\xc0|/r\xea\x97kI=\xccm\xec*\x11\x14$\x18B\xef\xdcR\xa3\xf2\r\xe0=)Eza\xbe\x1b0\xc7K$\xa7\xf8\xc4\xef\xc7\x14\x19\xcd\x8f \xcfo\x0c\x1ck]\x15\xf4_\xf8M]S\x11Z\x86\xac\xcd\xc6\x1db\xc9|=F\xb1z\x0cH\xfd/W\xde-\xa1q\xcb\xbc\x93i\x18\x05fD\x14\xfc\x9c\xb3\xab\x8b\xec\xf0#B\xe4\x13\x1e\xb34`K\x04\xf6\x11\x7fa\x0cI\x98\xb8"\xc6'
==================================================
...
...
...
'''














